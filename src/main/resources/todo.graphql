type User {
  user_id: ID
  username: String
  todos: [Todo] @inverse(field: "user")
  seen_history: [History]
}

type History {
  todo_id: ID
  seen: DateTime
  ##recently_seen(seen: $seen) @computed(with: "max($seen)")
  user: User! @inverse(field: "seen_history")
}

type Todo {
  todo_id: ID
  title: String @mutable
  status: boolean @mutable
  user: User! @inverse(field: "todos")
}

type Query {
  todosByUser: [Todo] @sql(where: user.username = $username)
  todosByTitle: [Todo] @sql(where: user.username = $username AND title = $title)
  user: [User] @sql(where: user_id = $user_id)
  ## recentlySeen: [History] @sql(where: seen > $seen)
}

##query GetMostRecentlySeen($seen: DateTime) {
##  recently_seen(seen: $seen) {
##    user {
##      user_id
##    }
##  }
##}

query GetTodosByUser($username: String) {
  todosByUser(user_id: $user_id) {
    title
    status
    user {
      user_id
    }
  }
    todosByTitle(user_id: $username) {
      title
      status
      user {
        user_id
      }
    }

    user(user_id: $username) {
      title
      status
      user {
        user_id
      }
    }
}

fragment UpdateSeen on History
    @insert {
  seen
  user {
    user_id
  }
}


fragment CreateUser on User
    @insert {
  username
}

fragment AddTodo on Todo
    @insert {
  title
  completed
  user {
    user_id
  }
}

fragment UpdateTodo on Todo
    @update(from: "todo_id = $todo_id") {
  title
  status
}
